@model GAPv3.Models.Report

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Report</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ReportId)
        @Html.HiddenFor(m => m.NormId)
        <div class="card">
            <div class="card-body">
                <div class="form-group row">
                    @Html.LabelFor(model => model.OrganisationId, "OrganisationId", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("OrganisationId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.OrganisationId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>

        <table class="table">
            <thead>
                <tr>
                    <th>@Html.DisplayNameFor(model => model.ReportValues[1].NormItem.Order)</th>
                    <th>@Html.DisplayNameFor(model => model.ReportValues[1].NormItem.Name)</th>
                    <th>@Html.DisplayNameFor(model => model.ReportValues[1].Status)</th>
                    <th>@Html.DisplayNameFor(model => model.ReportValues[1].Note)</th>
                </tr>
            </thead>
            <tbody>
                @{ var parent = Model.ReportValues; }
                @for (int i = 0; i < Model.ReportValues.Count(); i++)
                {
                    <tr class="bg-light text-dark">
                        @Html.HiddenFor(m => m.ReportValues[i].NormItemId)
                        @Html.HiddenFor(m => m.ReportValues[i].ReportId)
                        <td>
                            @Html.DisplayFor(model => model.ReportValues[i].NormItem.Order).
                        </td>
                        <td>
                            @Html.DisplayFor(model => model.ReportValues[i].NormItem.Name)
                        </td>
                        <td>@Html.HiddenFor(model => model.ReportValues[i].StatusId)</td>
                        <td>@Html.HiddenFor(model => model.ReportValues[i].Note)</td>
                    </tr>
                    var children = Model.ReportValues[i].Children;
                    for (int j = 0; j < children.Count(); j++)
                    {
                        var parentCss = children[j].NormItem.IsItem ? "" : "bg-light text-dark";
                        <tr class=@parentCss>
                            @Html.HiddenFor(m => m.ReportValues[i].Children[j].NormItemId)
                            @Html.HiddenFor(m => m.ReportValues[i].Children[j].ReportId)
                            <td>
                                @parent[i].NormItem.Order.@Html.DisplayFor(model => model.ReportValues[i].Children[j].NormItem.Order).
                            </td>
                            <td>
                                @Html.DisplayFor(model => model.ReportValues[i].Children[j].NormItem.Name)
                            </td>
                            @if (children[j].NormItem.IsItem)
                            {
                                <td>@Html.DropDownListFor(model => model.ReportValues[i].Children[j].StatusId, new SelectList(ViewBag.StatusId, "StatusId", "Name", children[j].StatusId), children[j].StatusId == null ? "- Please Select -" : null, htmlAttributes: new { @class = "form-control" })</td>
                                <td>@Html.TextBoxFor(model => model.ReportValues[i].Children[j].Note, new { @class = "form-control" })</td>
                            }
                            else
                            {
                                <td>@Html.HiddenFor(model => model.ReportValues[i].StatusId)</td>
                                <td>@Html.HiddenFor(model => model.ReportValues[i].Note)</td>
                            }

                        </tr>
                        var grandChildren = children[j].Children;
                        for (int k = 0; k < grandChildren.Count(); k++)
                        {
                            <tr>
                                @Html.HiddenFor(m => m.ReportValues[i].Children[j].Children[k].NormItemId)
                                @Html.HiddenFor(m => m.ReportValues[i].Children[j].Children[k].ReportId)
                                <td>
                                    @parent[i].NormItem.Order.@children[j].NormItem.Order.@Html.DisplayFor(model => model.ReportValues[i].Children[j].Children[k].NormItem.Order).
                                </td>
                                <td>
                                    @Html.DisplayFor(model => model.ReportValues[i].Children[j].Children[k].NormItem.Name)
                                </td>
                                <td>@Html.DropDownListFor(model => model.ReportValues[i].Children[j].Children[k].StatusId, new SelectList(ViewBag.StatusId, "StatusId", "Name", grandChildren[k].StatusId), grandChildren[k].StatusId == null ? "- Please Select -" : null, htmlAttributes: new { @class = "form-control" })</td>
                                <td>@Html.TextBoxFor(model => model.ReportValues[i].Children[j].Children[k].Note, new { @class = "form-control" })</td>
                            </tr>
                        }
                    }
                }
            </tbody>
        </table>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
                    }

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
