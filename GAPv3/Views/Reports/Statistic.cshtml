@model GAPv3.ViewModels.ReportStatisticViewModel
@{
    ViewBag.Title = "Statistic";
}

<h2>Statistic</h2>
<div>
    <h4>Report</h4>
    <hr />
    <div class="card">
        <div class="card-body">
            <h5 class="card-title">@Html.DisplayFor(model => model.Name)</h5>
            <h6 class="card-subtitle mb-2 text-muted">@Html.DisplayFor(model => model.Norm.Name)</h6>
            <h6 class="card-subtitle mb-2 text-muted">@Html.DisplayFor(model => model.Organisation.Name)</h6>
            <p class="card-text">
                <!-- TODO: get data from database -->
                Ovi korisnici mogu ažurirati:
                <span class="badge badge-primary">Primary</span>
                <span class="badge badge-secondary">Secondary</span>
                <span class="badge badge-secondary">Secondary</span>
                <span class="badge badge-secondary">Secondary</span>
            </p>
        </div>
        <div class="card-footer">
            Ukupna razina sukladnosti s normom: <span class="badge badge-info">@Model.Popunjenost% - PROVJERI KALKULACIJU, ovo je test</span>
        </div>
    </div>
    
    <div>
        <img src="@Url.Action("GetRainfallChart")" alt="Chart" />
    </div>

    <table class="table">
        <thead>
            <tr>
                <th>@Html.DisplayNameFor(model => model.ReportValues[1].NormItem.Order)</th>
                <th>@Html.DisplayNameFor(model => model.ReportValues[1].NormItem.Name)</th>
                <th colspan="2">@Html.DisplayNameFor(model => model.ReportValues[1].FullImpl)</th>
                <th colspan="2">@Html.DisplayNameFor(model => model.ReportValues[1].PartImpl)</th>
                <th colspan="2">@Html.DisplayNameFor(model => model.ReportValues[1].NoImpl)</th>
            </tr>
        </thead>

        <tbody>
            @{ var parent = Model.ReportValues; }
            @for (int i = 0; i < Model.ReportValues.Count; i++)
            {
                <tr class="bg-light text-dark">
                    <td>@Html.DisplayFor(model => model.ReportValues[i].NormItem.Order).</td>
                    <td>@Html.DisplayFor(model => model.ReportValues[i].NormItem.Name)</td>
                    <td class="@Html.DisplayFor(model => model.ReportValues[i].ColorFullImpl)">@Html.DisplayFor(model => model.ReportValues[i].FullImplCount)</td>
                    <td class="@Html.DisplayFor(model => model.ReportValues[i].ColorFullImpl)">@Html.DisplayFor(model => model.ReportValues[i].FullImpl)%</td>
                    <td class="@Html.DisplayFor(model => model.ReportValues[i].ColorPartImpl)">@Html.DisplayFor(model => model.ReportValues[i].PartImplCount)</td>
                    <td class="@Html.DisplayFor(model => model.ReportValues[i].ColorPartImpl)">@Html.DisplayFor(model => model.ReportValues[i].PartImpl)%</td>
                    <td class="@Html.DisplayFor(model => model.ReportValues[i].ColorNoImpl)">@Html.DisplayFor(model => model.ReportValues[i].NoImplCount)</td>
                    <td class="@Html.DisplayFor(model => model.ReportValues[i].ColorNoImpl)">@Html.DisplayFor(model => model.ReportValues[i].NoImpl)%</td>
                </tr>
                var children = Model.ReportValues[i].Children;
                for (int j = 0; j < children.Count(); j++)
                {
                    <tr>
                        <td>@parent[i].NormItem.Order.@Html.DisplayFor(model => model.ReportValues[i].Children[j].NormItem.Order).</td>
                        <td>@Html.DisplayFor(model => model.ReportValues[i].Children[j].NormItem.Name)</td>
                        @if (children[j].NormItem.IsItem)
                        {
                            <td class="text-center" colspan="2"><i class="@Html.DisplayFor(model => model.ReportValues[i].Children[j].IconFullImpl)"></i></td>
                            <td class="text-center" colspan="2"><i class="@Html.DisplayFor(model => model.ReportValues[i].Children[j].IconPartImpl)"></i></td>
                            <td class="text-center" colspan="2"><i class="@Html.DisplayFor(model => model.ReportValues[i].Children[j].IconNoImpl)"></i></td>
                        }
                        else
                        {
                            <td class="@Html.DisplayFor(model => model.ReportValues[i].Children[j].ColorFullImpl)">@Html.DisplayFor(model => model.ReportValues[i].Children[j].FullImplCount)</td>
                            <td class="@Html.DisplayFor(model => model.ReportValues[i].Children[j].ColorFullImpl)">@Html.DisplayFor(model => model.ReportValues[i].Children[j].FullImpl)%</td>
                            <td class="@Html.DisplayFor(model => model.ReportValues[i].Children[j].ColorPartImpl)">@Html.DisplayFor(model => model.ReportValues[i].Children[j].PartImplCount)</td>
                            <td class="@Html.DisplayFor(model => model.ReportValues[i].Children[j].ColorPartImpl)">@Html.DisplayFor(model => model.ReportValues[i].Children[j].PartImpl)%</td>
                            <td class="@Html.DisplayFor(model => model.ReportValues[i].Children[j].ColorNoImpl)">@Html.DisplayFor(model => model.ReportValues[i].Children[j].NoImplCount)</td>
                            <td class="@Html.DisplayFor(model => model.ReportValues[i].Children[j].ColorNoImpl)">@Html.DisplayFor(model => model.ReportValues[i].Children[j].NoImpl)%</td>
                        }
                    </tr>
                    var grandChildren = children[j].Children;
                    for (int k = 0; k < grandChildren.Count(); k++)
                    {
                        <tr>
                            <td>@parent[i].NormItem.Order.@children[j].NormItem.Order.@Html.DisplayFor(model => model.ReportValues[i].Children[j].Children[k].NormItem.Order).</td>
                            <td>@Html.DisplayFor(model => model.ReportValues[i].Children[j].Children[k].NormItem.Name)</td>
                            <td class="text-center" colspan="2"><i class="@Html.DisplayFor(model => model.ReportValues[i].Children[j].Children[k].IconFullImpl)"></i></td>
                            <td class="text-center" colspan="2"><i class="@Html.DisplayFor(model => model.ReportValues[i].Children[j].Children[k].IconPartImpl)"></i></td>
                            <td class="text-center" colspan="2"><i class="@Html.DisplayFor(model => model.ReportValues[i].Children[j].Children[k].IconNoImpl)"></i></td>
                        </tr>
                    }
                }
            }
        </tbody>
    </table>
</div>
<p>
    @Html.ActionLink("Edit", "Edit", new { id = Model.ReportId }) |
    @Html.ActionLink("Back to List", "Index", new { id = Model.Norm.NormId })
</p>