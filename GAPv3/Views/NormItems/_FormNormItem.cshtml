@model GAPv3.ViewModels.NormItemFormViewModel

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="modal-header">
        <h5 class="modal-title" id="exampleModalLabel">Create - klauzula/zahtjev</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
    </div>
    <div class="modal-body">
        <div class="container">
            <div class="form-row">
                <div class="col-form-label col-md-3">@Html.DisplayNameFor(model => model.NormName):</div>
                <div class="col-form-label col-md-9">@Html.DisplayFor(model => model.NormName)</div>
            </div>
            <div class="form-row">
                <div class="col-form-label col-md-3">@Html.DisplayNameFor(model => model.ParentName):</div>
                <div class="col-form-label col-md-9">@Html.DisplayFor(model => model.ParentName)</div>
            </div>
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Order, htmlAttributes: new { @class = "col-form-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.Order, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Order, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "col-form-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", rows = "3" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="container">
                <div class="custom-control custom-checkbox">
                    @Html.CheckBoxFor(model => model.IsItem, htmlAttributes: new { @class = "custom-control-input" })
                    @Html.LabelFor(model => model.IsItem, htmlAttributes: new { @class = "custom-control-label" })?
                </div>
            </div>
        </div>
    </div>
    @Html.HiddenFor(m => m.NormId)
    @Html.HiddenFor(m => m.ParentId)
    <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-dismiss="modal" id="closeModal">Close</button>
        <button type="button" class="btn btn-primary" onclick="Save()">Save changes</button>
    </div>
}
